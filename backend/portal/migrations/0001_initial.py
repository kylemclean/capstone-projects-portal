# Generated by Django 3.2.7 on 2021-10-02 03:17

import uuid

import django.db.models.deletion
import django.utils.timezone
import portal.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=90)),
                ("bio", models.TextField(blank=True)),
                ("picture", models.URLField(blank=True)),
                ("website_link", models.URLField(blank=True)),
                ("linkedin_link", models.URLField(blank=True)),
                ("github_username", models.CharField(blank=True, max_length=60)),
                (
                    "github_user_id",
                    models.CharField(blank=True, max_length=35, null=True, unique=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", portal.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ClientOrg",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=60)),
                ("about", models.TextField(blank=True)),
                ("logo", models.URLField(blank=True)),
                ("website_link", models.URLField(blank=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("SP", "Startup"),
                            ("NP", "Non-profit"),
                            ("AC", "Academic"),
                            ("CSL", "Community Service Learning"),
                            ("OTH", "Other"),
                        ],
                        default="OTH",
                        max_length=60,
                    ),
                ),
                (
                    "reps",
                    models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MailingList",
            fields=[
                (
                    "email",
                    models.EmailField(
                        max_length=254, primary_key=True, serialize=False
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Proposal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("rep_name", models.CharField(max_length=95)),
                ("email", models.EmailField(max_length=254)),
                ("project_info", models.TextField()),
                ("date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=25, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=80)),
                ("summary", models.TextField(blank=True)),
                ("video", models.URLField(blank=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("MA", "Mobile App"),
                            ("WA", "Web App"),
                            ("OTH", "Other"),
                        ],
                        default="OTH",
                        max_length=50,
                    ),
                ),
                ("tagline", models.CharField(blank=True, max_length=150)),
                ("is_published", models.BooleanField(default=False)),
                ("year", models.PositiveBigIntegerField()),
                (
                    "term",
                    models.CharField(
                        choices=[
                            ("F", "Fall"),
                            ("W", "Winter"),
                            ("SP", "Spring"),
                            ("SM", "Summer"),
                        ],
                        max_length=50,
                    ),
                ),
                ("screenshot", models.URLField(blank=True)),
                ("presentation", models.URLField(blank=True)),
                ("review", models.TextField(blank=True)),
                (
                    "client_org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="portal.clientorg",
                    ),
                ),
                (
                    "client_rep",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="client_rep_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "students",
                    models.ManyToManyField(
                        blank=True,
                        related_name="student_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ta",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ta_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="portal.Tag")),
            ],
        ),
    ]
